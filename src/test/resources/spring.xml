<?xml version="1.0" encoding="UTF-8"?>
<beans>

    <bean id="userDao" class="com.cdtft.springframework.beans.factory.support.UserDao" init-method="initData" destroy-method="clearData"/>

    <bean id="TestBeanPostProcessor" class="com.cdtft.springframework.beans.factory.support.TestBeanPostProcessor"/>

    <bean id="proxyUserDao" class="com.cdtft.springframework.beans.factory.support.ProxyFactoryBean"/>

    <bean id="testListener" class="com.cdtft.springframework.context.TestListener"/>

    <!--  AOP和Bean的生命周期融合一体  -->
    <bean id="defaultAdvisorAutoProxyCreator" class="com.cdtft.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <bean id="userServiceBeforeAdvice" class="com.cdtft.springframework.aop.aspectj.UserServiceBeforeAdvice"/>

    <bean id="methodBeforeAdviceInterceptor" class="com.cdtft.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor">
        <property name="methodBeforeAdvice" ref="userServiceBeforeAdvice"/>
    </bean>

    <!--  定义切面和通知方法  -->
    <bean id="pointcutAdvisor" class="com.cdtft.springframework.aop.AspectJExpressionPointcutAdvisor">
        <property name="expression" value="execution( * com.cdtft.springframework.beans.factory.support.IUserService.*(..))"/>
        <property name="advice" ref="methodBeforeAdviceInterceptor"/>
    </bean>

    <component-scan base-package="com.cdtft.springframework"/>

</beans>